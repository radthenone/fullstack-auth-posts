version: "3.9"

volumes:
  postgres_data:
  mailhog_data:

services:
  postgres:
    image: postgres:15-alpine
    container_name: fullstack_auth_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.envs/postgres.env
    expose:
      - "5432"
    ports:
      - "5433:5432"
    restart:
      unless-stopped

  django: &django
    build:
      context: ./core
      dockerfile: ./docker/Dockerfile
    command: /django.sh
    container_name: fullstack_auth_django
    volumes:
      - ./core:/src:z
    env_file:
      - ./.envs/django.env
      - ./.envs/postgres.env
      - ./.envs/email.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - smtp
    logging:
      options:
        max-size: 50m

  celery-beat:
    <<: *django
    ports: []
    command: /celery/beat.sh
    container_name: fullstack_auth_celery_beat
    volumes:
      - ./core:/src:z
    env_file:
      - ./.envs/django.env
      - ./.envs/postgres.env
      - ./.envs/email.env
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: curl --fail http://localhost:8000/api || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    restart:
      unless-stopped

  celery-worker:
    <<: *django
    ports: []
    command: /celery/worker.sh
    container_name: fullstack_auth_celery_worker
    volumes:
      - ./core:/src:z
    env_file:
      - ./.envs/django.env
      - ./.envs/postgres.env
      - ./.envs/email.env
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: curl --fail http://localhost:8000/api || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    restart:
      unless-stopped

  redis:
    image: redis:7
    container_name: fullstack_auth_redis

  flower:
    <<: *django
    ports:
      - "5555:5555"
    command: /celery/flower.sh
    container_name: fullstack_auth_flower
    volumes:
      - ./core:/src:z
    env_file:
      - ./.envs/django.env
      - ./.envs/postgres.env
      - ./.envs/email.env
    depends_on:
      - postgres
      - redis

  react:
    build:
      context: ./frontend
      dockerfile: ./docker/Dockerfile
    container_name: fullstack_auth_react
    env_file:
      - ./.envs/react.env
    stdin_open: true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    tty: true

  smtp:
    image: mailhog/mailhog
    container_name: fullstack_auth_smtp
    env_file:
      - ./.envs/email.env
    ports:
      - "1025:1025"
      - "8025:8025"
    expose:
      - 1025
      - 8025
    volumes:
      - mailhog_data:/data
